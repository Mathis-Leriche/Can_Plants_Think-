rownames(result_Student) <- c("shapiro_temoin_W","shapiro_temoin_p_value", "shapiro_perturb_W","shapiro_perturb_p_value", "variance_W", "variance_p_value", "student_t", "student_p_value", "student_interval_low", "student_interval_high")
for (track in 0:2) {
#creating a table of data with only one track at a time
low = 4*track + 1
high = low + 3
column_indices <- c(low:high, 13)  #Change here once we have the data
cname <- c("Angle L1.Y", "Angle L2.Y", "Angle L3.Y","Angle IN3.Y", "time")
track_data_t <- data_temoin[, column_indices, drop = FALSE]
colnames(track_data_t) <-  cname
track_data_p <- data_perturb[, column_indices, drop = FALSE]
colnames(track_data_p) <-  cname
#transforming time in a different class so it's possible to plot
track_data_t$time <- as.POSIXct(track_data_t$time, format = "%Y-%m-%d %H:%M:%S")
track_data_p$time <- as.POSIXct(track_data_p$time, format = "%Y-%m-%d %H:%M:%S")
#initializing the list "track" that will be added as a row later on in the result_aupdc_temoin
track_t <- list(track = paste0("track_",track), "Angle.L1.Y" = 0, "Angle.L2.Y" = 0, "Angle.L3.Y" = 0, "Angle.IN3.Y" = 0)
track_p <- list(track = paste0("track_",track), "Angle.L1.Y" = 0, "Angle.L2.Y" = 0, "Angle.L3.Y" = 0, "Angle.IN3.Y" = 0)
print(plot(track_data_t$time, track_data_t[1]))
print(plot(track_data_t$time, track_data_t[1]))
# Question 1 : difference in angle between plants of the same position
library(ggplot2)
library(agricolae)
library(patchwork)
library(tidyverse)
print(plot(track_data_t$time, track_data_t[1]))
track_data_t <- track_data_t %>%
mutate(time_seconds = as.numeric(difftime(time, min(time), units = "secs")))
# Plot the data with points joined by lines
ggplot(track_data_t, aes(x = time_seconds, y = "Angle L1.Y")) +
geom_line(color = "black") +
geom_point(size = 2) +
labs(x = "Time (seconds)", y = "Your Y-axis label") +
ggtitle("Your Plot Title")
# Plot the data with points joined by lines
ggplot(track_data_t, aes(x = time_seconds, y = track_data_t$`Angle L1.Y`)) +
geom_line(color = "black") +
geom_point(size = 2) +
labs(x = "Time (seconds)", y = "Your Y-axis label") +
ggtitle("Your Plot Title")
data <- read.csv("C:\\Users\\33646\\OneDrive\\Documents\\GitHub\\Artificial intelligence\\Can_Plants_Think-\\Tabacco\\Angles_NTS2P4.csv", header = T, sep= ",")
data$time <- as.POSIXct(data$time, format = "%Y-%m-%d %H:%M:%S")
data_temoin <- data %>%
filter(time <= "2023-12-08 17:00:00" )
data_perturb <- data %>%
filter(time >= "2023-12-12 17:00:00")
result_audpc_temoin <- data.frame(track = character(), "Angle L1.Y" = numeric(), "Angle L2.Y" = numeric(), "Angle L3.Y" = numeric(), "Angle IN3.Y" = numeric(), stringsAsFactors = FALSE)
result_audpc_perturb <- data.frame(track = character(), "Angle L1.Y" = numeric(), "Angle L2.Y" = numeric(), "Angle L3.Y" = numeric(), "Angle IN3.Y" = numeric(), stringsAsFactors = FALSE)
result_Student <- data.frame("Angle L1.Y" = rep(0, times = 10), "Angle L2.Y" = rep(0, times = 10), "Angle L3.Y" = rep(0, times = 10), "Angle IN3.Y" = rep(0, times = 10), stringsAsFactors = FALSE)
rownames(result_Student) <- c("shapiro_temoin_W","shapiro_temoin_p_value", "shapiro_perturb_W","shapiro_perturb_p_value", "variance_W", "variance_p_value", "student_t", "student_p_value", "student_interval_low", "student_interval_high")
for (track in 0:2) {
#creating a table of data with only one track at a time
low = 4*track + 1
high = low + 3
column_indices <- c(low:high, 13)  #Change here once we have the data
cname <- c("Angle L1.Y", "Angle L2.Y", "Angle L3.Y","Angle IN3.Y", "time")
track_data_t <- data_temoin[, column_indices, drop = FALSE]
colnames(track_data_t) <-  cname
track_data_p <- data_perturb[, column_indices, drop = FALSE]
colnames(track_data_p) <-  cname
#transforming time in a different class so it's possible to plot
track_data_t$time <- as.POSIXct(track_data_t$time, format = "%Y-%m-%d %H:%M:%S")
track_data_p$time <- as.POSIXct(track_data_p$time, format = "%Y-%m-%d %H:%M:%S")
#initializing the list "track" that will be added as a row later on in the result_aupdc_temoin
track_t <- list(track = paste0("track_",track), "Angle.L1.Y" = 0, "Angle.L2.Y" = 0, "Angle.L3.Y" = 0, "Angle.IN3.Y" = 0)
track_p <- list(track = paste0("track_",track), "Angle.L1.Y" = 0, "Angle.L2.Y" = 0, "Angle.L3.Y" = 0, "Angle.IN3.Y" = 0)
# Convert time to seconds
track_data_t <- track_data_t %>%
mutate(time_seconds = as.numeric(difftime(time, min(time), units = "secs")))
# Plot the data with points joined by lines
ggplot(track_data_t, aes(x = time_seconds, y = track_data_t$`Angle L1.Y`)) +
geom_line(color = "black") +
geom_point(size = 2) +
labs(x = "Time (seconds)", y = "Your Y-axis label") +
ggtitle("Your Plot Title")
#plot
plot_t <- ggplot(data = track_data_t, aes(x = time))
if (!all(is.na(track_data_t[, "Angle L1.Y"]))) {
plot_t <- plot_t + geom_line(aes(y = track_data_t[, "Angle L1.Y"], color = "Angle L1.Y"), size = 1)
}
if (!all(is.na(track_data_t[, "Angle L2.Y"]))) {
plot_t <- plot_t + geom_line(aes(y = track_data_t[, "Angle L2.Y"], color = "Angle L2.Y"), size = 1)
}
if (!all(is.na(track_data_t[, "Angle L3.Y"]))) {
plot_t <- plot_t + geom_line(aes(y = track_data_t[, "Angle L3.Y"], color = "Angle L3.Y"), size = 1)
}
if (!all(is.na(track_data_t[, "Angle IN3.Y"]))) {
plot_t <- plot_t + geom_line(aes(y = track_data_t[, "Angle IN3.Y"], color = "Angle IN3.Y"), size = 1)
}
plot_t <- plot_t +
scale_color_manual(name = "Angle", values = c("#e78847","#05a894", "#dda0dd", "#2a52be")) +
labs(title = paste("Angle against time in tobacco ", track + 1, "in normal conditions"), x = "Time", y ="Angle")
plot_p <- ggplot(data = track_data_p, aes(x = time))
if (!all(is.na(track_data_p[, "Angle L1.Y"]))) {
plot_p <- plot_p + geom_line(aes(y = track_data_p[, "Angle L1.Y"], color = "Angle L1.Y"), size = 1)
}
if (!all(is.na(track_data_p[, "Angle L2.Y"]))) {
plot_p <- plot_p + geom_line(aes(y = track_data_p[, "Angle L2.Y"], color = "Angle L2.Y"), size = 1)
}
if (!all(is.na(track_data_p[, "Angle L3.Y"]))) {
plot_p <- plot_p + geom_line(aes(y = track_data_p[, "Angle L3.Y"], color = "Angle L3.Y"), size = 1)
}
if (!all(is.na(track_data_p[, "Angle IN3.Y"]))) {
plot_p <- plot_p + geom_line(aes(y = track_data_p[, "Angle IN3.Y"], color = "Angle IN3.Y"), size = 1)
}
plot_p <- plot_p +
scale_color_manual(name = "Angle", values = c("#e78847","#05a894", "#dda0dd", "#2a52be")) +
labs(title = paste("Angle against time in tobacco ", track + 1, "in changed conditions"), x = "Time", y = "Angle")
grid <- plot_t + plot_p + plot_layout(ncol = 1, heights = c(1, 1)) +
plot_annotation(title = paste("Difference in angles between normal and changed conditions in tobacco ",track+1))
print(grid)
#audpc
for (i in 1:4) {
audpc_result_t <- ifelse(all(is.na(track_data_t[, i])), NA, audpc(track_data_t[, i], track_data_t$time, type = "absolute"))
audpc_result_p <- ifelse(all(is.na(track_data_p[, i])), NA, audpc(track_data_p[, i], track_data_p$time, type = "absolute"))
track_t[i+1] <- audpc_result_t
track_p[i+1] <- audpc_result_p
}
result_audpc_temoin <- rbind(result_audpc_temoin, track_t)
result_audpc_perturb <- rbind(result_audpc_perturb, track_p)
}
print(result_audpc_temoin)
track_data_t <- track_data_t %>%
mutate(time_seconds = as.numeric(difftime(time, min(time), units = "secs")))
# Plot the data with points joined by lines
ggplot(track_data_t, aes(x = time_seconds, y = track_data_t$`Angle L1.Y`)) +
geom_line(color = "black") +
geom_point(size = 2) +
labs(x = "Time (seconds)", y = "Your Y-axis label") +
ggtitle("Your Plot Title")
data <- read.csv("C:\\Users\\33646\\OneDrive\\Documents\\GitHub\\Artificial intelligence\\Can_Plants_Think-\\Tabacco\\Angles_NTS2P4.csv", header = T, sep= ",")
data$time <- as.POSIXct(data$time, format = "%Y-%m-%d %H:%M:%S")
data_temoin <- data %>%
filter(time <= "2023-12-12 17:00:00" )
data_perturb <- data %>%
filter(time >= "2023-12-12 17:00:00")
result_audpc_temoin <- data.frame(track = character(), "Angle L1.Y" = numeric(), "Angle L2.Y" = numeric(), "Angle L3.Y" = numeric(), "Angle IN3.Y" = numeric(), stringsAsFactors = FALSE)
result_audpc_perturb <- data.frame(track = character(), "Angle L1.Y" = numeric(), "Angle L2.Y" = numeric(), "Angle L3.Y" = numeric(), "Angle IN3.Y" = numeric(), stringsAsFactors = FALSE)
result_Student <- data.frame("Angle L1.Y" = rep(0, times = 10), "Angle L2.Y" = rep(0, times = 10), "Angle L3.Y" = rep(0, times = 10), "Angle IN3.Y" = rep(0, times = 10), stringsAsFactors = FALSE)
rownames(result_Student) <- c("shapiro_temoin_W","shapiro_temoin_p_value", "shapiro_perturb_W","shapiro_perturb_p_value", "variance_W", "variance_p_value", "student_t", "student_p_value", "student_interval_low", "student_interval_high")
# Convert time to seconds
track_data_t <- track_data_t %>%
mutate(time_seconds = as.numeric(difftime(time, min(time), units = "secs")))
# Plot the data with points joined by lines
ggplot(track_data_t, aes(x = time_seconds, y = track_data_t$`Angle L1.Y`)) +
geom_line(color = "black") +
geom_point(size = 2) +
labs(x = "Time (seconds)", y = "Your Y-axis label") +
ggtitle("Your Plot Title")
for (track in 0:2) {
#creating a table of data with only one track at a time
low = 4*track + 1
high = low + 3
column_indices <- c(low:high, 13)  #Change here once we have the data
cname <- c("Angle L1.Y", "Angle L2.Y", "Angle L3.Y","Angle IN3.Y", "time")
track_data_t <- data_temoin[, column_indices, drop = FALSE]
colnames(track_data_t) <-  cname
track_data_p <- data_perturb[, column_indices, drop = FALSE]
colnames(track_data_p) <-  cname
#transforming time in a different class so it's possible to plot
track_data_t$time <- as.POSIXct(track_data_t$time, format = "%Y-%m-%d %H:%M:%S")
track_data_p$time <- as.POSIXct(track_data_p$time, format = "%Y-%m-%d %H:%M:%S")
#initializing the list "track" that will be added as a row later on in the result_aupdc_temoin
track_t <- list(track = paste0("track_",track), "Angle.L1.Y" = 0, "Angle.L2.Y" = 0, "Angle.L3.Y" = 0, "Angle.IN3.Y" = 0)
track_p <- list(track = paste0("track_",track), "Angle.L1.Y" = 0, "Angle.L2.Y" = 0, "Angle.L3.Y" = 0, "Angle.IN3.Y" = 0)
# Convert time to seconds
track_data_t <- track_data_t %>%
mutate(time_seconds = as.numeric(difftime(time, min(time), units = "secs")))
# Plot the data with points joined by lines
ggplot(track_data_t, aes(x = time_seconds, y = track_data_t$`Angle L1.Y`)) +
geom_line(color = "black") +
geom_point(size = 2) +
labs(x = "Time (seconds)", y = "Your Y-axis label") +
ggtitle("Your Plot Title")
for (track in 0:2) {
#creating a table of data with only one track at a time
low = 4*track + 1
high = low + 3
column_indices <- c(low:high, 13)  #Change here once we have the data
cname <- c("Angle L1.Y", "Angle L2.Y", "Angle L3.Y","Angle IN3.Y", "time")
track_data_t <- data_temoin[, column_indices, drop = FALSE]
colnames(track_data_t) <-  cname
track_data_p <- data_perturb[, column_indices, drop = FALSE]
colnames(track_data_p) <-  cname
#transforming time in a different class so it's possible to plot
track_data_t$time <- as.POSIXct(track_data_t$time, format = "%Y-%m-%d %H:%M:%S")
track_data_p$time <- as.POSIXct(track_data_p$time, format = "%Y-%m-%d %H:%M:%S")
#initializing the list "track" that will be added as a row later on in the result_aupdc_temoin
track_t <- list(track = paste0("track_",track), "Angle.L1.Y" = 0, "Angle.L2.Y" = 0, "Angle.L3.Y" = 0, "Angle.IN3.Y" = 0)
track_p <- list(track = paste0("track_",track), "Angle.L1.Y" = 0, "Angle.L2.Y" = 0, "Angle.L3.Y" = 0, "Angle.IN3.Y" = 0)
# Convert time to seconds
track_data_t <- track_data_t %>%
mutate(time_seconds = as.numeric(difftime(time, min(time), units = "secs")))
# Plot the data with points joined by lines
ggplot(track_data_t, aes(x = time_seconds, y = track_data_t$`Angle L1.Y`)) +
geom_line(color = "black") +
geom_point(size = 2) +
labs(x = "Time (seconds)", y = "Your Y-axis label") +
ggtitle("Your Plot Title")
track_data_t <- track_data_t %>%
mutate(time_seconds = as.numeric(difftime(time, min(time), units = "secs")))
# Plot the data with points joined by lines
ggplot(track_data_t, aes(x = time_seconds, y = track_data_t$`Angle L1.Y`)) +
geom_line(color = "black") +
geom_point(size = 2) +
labs(x = "Time (seconds)", y = "Your Y-axis label") +
ggtitle("Your Plot Title")
View(track_data_t)
track_data_t <- data_temoin[, column_indices, drop = FALSE]
data_temoin <- data %>%
filter(time <= "2023-12-12 17:00:00" )
track_data_t <- data_temoin[, column_indices, drop = FALSE]
colnames(track_data_t) <-  cname
View(data_temoin)
for (track in 0:2) {
#creating a table of data with only one track at a time
low = 4*track + 1
high = low + 3
column_indices <- c(low:high, 13)  #Change here once we have the data
cname <- c("Angle L1.Y", "Angle L2.Y", "Angle L3.Y","Angle IN3.Y", "time")
track_data_t <- data_temoin[, column_indices, drop = FALSE]
colnames(track_data_t) <-  cname
track_data_p <- data_perturb[, column_indices, drop = FALSE]
colnames(track_data_p) <-  cname
#transforming time in a different class so it's possible to plot
track_data_t$time <- as.POSIXct(track_data_t$time, format = "%Y-%m-%d %H:%M:%S")
track_data_p$time <- as.POSIXct(track_data_p$time, format = "%Y-%m-%d %H:%M:%S")
#initializing the list "track" that will be added as a row later on in the result_aupdc_temoin
track_t <- list(track = paste0("track_",track), "Angle.L1.Y" = 0, "Angle.L2.Y" = 0, "Angle.L3.Y" = 0, "Angle.IN3.Y" = 0)
track_p <- list(track = paste0("track_",track), "Angle.L1.Y" = 0, "Angle.L2.Y" = 0, "Angle.L3.Y" = 0, "Angl
for (track in 0:2) {
#creating a table of data with only one track at a time
low = 4*track + 1
high = low + 3
column_indices <- c(low:high, 13)  #Change here once we have the data
cname <- c("Angle L1.Y", "Angle L2.Y", "Angle L3.Y","Angle IN3.Y", "time")
library(ggplot2)
library(agricolae)
library(patchwork)
library(tidyverse)
knitr::opts_chunk$set(echo = TRUE)
data <- read.csv("C:\\Users\\33646\\OneDrive\\Documents\\GitHub\\Artificial intelligence\\Can_Plants_Think-\\Tabacco\\Angles_NTS2P4.csv", header = T, sep= ",")
data$time <- as.POSIXct(data$time, format = "%Y-%m-%d %H:%M:%S")
data_temoin <- data %>%
filter(time <= "2023-12-12 17:00:00" )
data_perturb <- data %>%
filter(time >= "2023-12-12 17:00:00")
result_audpc_temoin <- data.frame(track = character(), "Angle L1.Y" = numeric(), "Angle L2.Y" = numeric(), "Angle L3.Y" = numeric(), "Angle IN3.Y" = numeric(), stringsAsFactors = FALSE)
result_audpc_perturb <- data.frame(track = character(), "Angle L1.Y" = numeric(), "Angle L2.Y" = numeric(), "Angle L3.Y" = numeric(), "Angle IN3.Y" = numeric(), stringsAsFactors = FALSE)
result_Student <- data.frame("Angle L1.Y" = rep(0, times = 10), "Angle L2.Y" = rep(0, times = 10), "Angle L3.Y" = rep(0, times = 10), "Angle IN3.Y" = rep(0, times = 10), stringsAsFactors = FALSE)
rownames(result_Student) <- c("shapiro_temoin_W","shapiro_temoin_p_value", "shapiro_perturb_W","shapiro_perturb_p_value", "variance_W", "variance_p_value", "student_t", "student_p_value", "student_interval_low", "student_interval_high")
for (track in 0:2) {
#creating a table of data with only one track at a time
low = 4*track + 1
high = low + 3
column_indices <- c(low:high, 13)  #Change here once we have the data
cname <- c("Angle L1.Y", "Angle L2.Y", "Angle L3.Y","Angle IN3.Y", "time")
track_data_t <- data_temoin[, column_indices, drop = FALSE]
colnames(track_data_t) <-  cname
track_data_p <- data_perturb[, column_indices, drop = FALSE]
colnames(track_data_p) <-  cname
#transforming time in a different class so it's possible to plot
track_data_t$time <- as.POSIXct(track_data_t$time, format = "%Y-%m-%d %H:%M:%S")
track_data_p$time <- as.POSIXct(track_data_p$time, format = "%Y-%m-%d %H:%M:%S")
#initializing the list "track" that will be added as a row later on in the result_aupdc_temoin
track_t <- list(track = paste0("track_",track), "Angle.L1.Y" = 0, "Angle.L2.Y" = 0, "Angle.L3.Y" = 0, "Angle.IN3.Y" = 0)
track_p <- list(track = paste0("track_",track), "Angle.L1.Y" = 0, "Angle.L2.Y" = 0, "Angle.L3.Y" = 0, "Angle.IN3.Y" = 0)
# Convert time to seconds
track_data_t <- track_data_t %>%
mutate(time_seconds = as.numeric(difftime(time, min(time), units = "secs")))
# Plot the data with points joined by lines
ggplot(track_data_t, aes(x = time_seconds, y = track_data_t$`Angle L1.Y`)) +
geom_line(color = "black") +
geom_point(size = 2) +
labs(x = "Time (seconds)", y = "Your Y-axis label") +
ggtitle("Your Plot Title")
# Convert time to seconds
track_data_t <- track_data_t %>%
mutate(time_seconds = as.numeric(difftime(time, min(time), units = "secs")))
# Plot the data with points joined by lines
plot <- ggplot(track_data_t, aes(x = time_seconds, y = track_data_t$`Angle L1.Y`)) +
geom_line(color = "black") +
geom_point(size = 2) +
labs(x = "Time (seconds)", y = "Your Y-axis label") +
ggtitle("Your Plot Title")
print(plot)
library(ggplot2)
library(agricolae)
library(patchwork)
library(tidyverse)
knitr::opts_chunk$set(echo = TRUE)
library(ggplot2)
library(agricolae)
library(patchwork)
library(tidyverse)
data <- read.csv("C:\\Users\\33646\\OneDrive\\Documents\\GitHub\\Artificial intelligence\\Can_Plants_Think-\\Tabacco\\Angles_NTS2P4.csv", header = T, sep= ",")
data$time <- as.POSIXct(data$time, format = "%Y-%m-%d %H:%M:%S")
data_temoin <- data %>%
filter(time <= "2023-12-12 17:00:00" )
data_perturb <- data %>%
filter(time >= "2023-12-12 17:00:00")
result_audpc_temoin <- data.frame(track = character(), "Angle L1.Y" = numeric(), "Angle L2.Y" = numeric(), "Angle L3.Y" = numeric(), "Angle IN3.Y" = numeric(), stringsAsFactors = FALSE)
result_audpc_perturb <- data.frame(track = character(), "Angle L1.Y" = numeric(), "Angle L2.Y" = numeric(), "Angle L3.Y" = numeric(), "Angle IN3.Y" = numeric(), stringsAsFactors = FALSE)
result_Student <- data.frame("Angle L1.Y" = rep(0, times = 10), "Angle L2.Y" = rep(0, times = 10), "Angle L3.Y" = rep(0, times = 10), "Angle IN3.Y" = rep(0, times = 10), stringsAsFactors = FALSE)
rownames(result_Student) <- c("shapiro_temoin_W","shapiro_temoin_p_value", "shapiro_perturb_W","shapiro_perturb_p_value", "variance_W", "variance_p_value", "student_t", "student_p_value", "student_interval_low", "student_interval_high")
for (track in 0:2) {
#creating a table of data with only one track at a time
low = 4*track + 1
high = low + 3
column_indices <- c(low:high, 13)  #Change here once we have the data
cname <- c("Angle L1.Y", "Angle L2.Y", "Angle L3.Y","Angle IN3.Y", "time")
track_data_t <- data_temoin[, column_indices, drop = FALSE]
colnames(track_data_t) <-  cname
track_data_p <- data_perturb[, column_indices, drop = FALSE]
colnames(track_data_p) <-  cname
#transforming time in a different class so it's possible to plot
track_data_t$time <- as.POSIXct(track_data_t$time, format = "%Y-%m-%d %H:%M:%S")
track_data_p$time <- as.POSIXct(track_data_p$time, format = "%Y-%m-%d %H:%M:%S")
#initializing the list "track" that will be added as a row later on in the result_aupdc_temoin
track_t <- list(track = paste0("track_",track), "Angle.L1.Y" = 0, "Angle.L2.Y" = 0, "Angle.L3.Y" = 0, "Angle.IN3.Y" = 0)
track_p <- list(track = paste0("track_",track), "Angle.L1.Y" = 0, "Angle.L2.Y" = 0, "Angle.L3.Y" = 0, "Angle.IN3.Y" = 0)
# Convert time to seconds
track_data_t <- track_data_t %>%
mutate(time_seconds = as.numeric(difftime(time, min(time), units = "secs")))
# Plot the data with points joined by lines
plot <- ggplot(track_data_t, aes(x = time_seconds, y = track_data_t$`Angle L1.Y`)) +
geom_line(color = "black") +
geom_point(size = 2) +
labs(x = "Time (seconds)", y = "Your Y-axis label") +
ggtitle("Your Plot Title")
print(plot)
View(track_data_t)
track_data_t$time_seconds
track_data_t$time
data <- read.csv("C:\\Users\\33646\\OneDrive\\Documents\\GitHub\\Artificial intelligence\\Can_Plants_Think-\\Tabacco\\Angles_NTS2P4.csv", header = T, sep= ",")
data$time <- as.POSIXct(data$time, format = "%Y-%m-%d %H:%M:%S")
data_temoin <- data %>%
filter(time <= "2023-12-12 17:00:00" )
data_perturb <- data %>%
filter(time >= "2023-12-12 17:00:00")
result_audpc_temoin <- data.frame(track = character(), "Angle L1.Y" = numeric(), "Angle L2.Y" = numeric(), "Angle L3.Y" = numeric(), "Angle IN3.Y" = numeric(), stringsAsFactors = FALSE)
result_audpc_perturb <- data.frame(track = character(), "Angle L1.Y" = numeric(), "Angle L2.Y" = numeric(), "Angle L3.Y" = numeric(), "Angle IN3.Y" = numeric(), stringsAsFactors = FALSE)
result_Student <- data.frame("Angle L1.Y" = rep(0, times = 10), "Angle L2.Y" = rep(0, times = 10), "Angle L3.Y" = rep(0, times = 10), "Angle IN3.Y" = rep(0, times = 10), stringsAsFactors = FALSE)
rownames(result_Student) <- c("shapiro_temoin_W","shapiro_temoin_p_value", "shapiro_perturb_W","shapiro_perturb_p_value", "variance_W", "variance_p_value", "student_t", "student_p_value", "student_interval_low", "student_interval_high")
for (track in 0:2) {
#creating a table of data with only one track at a time
low = 4*track + 1
high = low + 3
column_indices <- c(low:high, 13)  #Change here once we have the data
cname <- c("Angle L1.Y", "Angle L2.Y", "Angle L3.Y","Angle IN3.Y", "time")
track_data_t <- data_temoin[, column_indices, drop = FALSE]
colnames(track_data_t) <-  cname
track_data_p <- data_perturb[, column_indices, drop = FALSE]
colnames(track_data_p) <-  cname
#transforming time in a different class so it's possible to plot
track_data_t$time <- as.POSIXct(track_data_t$time, format = "%Y-%m-%d %H:%M:%S")
track_data_p$time <- as.POSIXct(track_data_p$time, format = "%Y-%m-%d %H:%M:%S")
#initializing the list "track" that will be added as a row later on in the result_aupdc_temoin
track_t <- list(track = paste0("track_",track), "Angle.L1.Y" = 0, "Angle.L2.Y" = 0, "Angle.L3.Y" = 0, "Angle.IN3.Y" = 0)
track_p <- list(track = paste0("track_",track), "Angle.L1.Y" = 0, "Angle.L2.Y" = 0, "Angle.L3.Y" = 0, "Angle.IN3.Y" = 0)
# Convert time to seconds
track_datatime_seconds_t <- track_data_t %>%
mutate(time_seconds = as.numeric(difftime(time, min(time), units = "secs")))
track_data_t$time
# Plot the data with points joined by lines
plot <- ggplot(track_data_t, aes(x = time_seconds, y = track_data_t$`Angle L1.Y`)) +
geom_line(color = "black") +
geom_point(size = 2) +
labs(x = "Time (seconds)", y = "Your Y-axis label") +
ggtitle("Your Plot Title")
print(plot)
#plot
plot_t <- ggplot(data = track_data_t, aes(x = time))
if (!all(is.na(track_data_t[, "Angle L1.Y"]))) {
plot_t <- plot_t + geom_line(aes(y = track_data_t[, "Angle L1.Y"], color = "Angle L1.Y"), size = 1)
}
if (!all(is.na(track_data_t[, "Angle L2.Y"]))) {
plot_t <- plot_t + geom_line(aes(y = track_data_t[, "Angle L2.Y"], color = "Angle L2.Y"), size = 1)
}
if (!all(is.na(track_data_t[, "Angle L3.Y"]))) {
plot_t <- plot_t + geom_line(aes(y = track_data_t[, "Angle L3.Y"], color = "Angle L3.Y"), size = 1)
}
if (!all(is.na(track_data_t[, "Angle IN3.Y"]))) {
plot_t <- plot_t + geom_line(aes(y = track_data_t[, "Angle IN3.Y"], color = "Angle IN3.Y"), size = 1)
}
plot_t <- plot_t +
scale_color_manual(name = "Angle", values = c("#e78847","#05a894", "#dda0dd", "#2a52be")) +
labs(title = paste("Angle against time in tobacco ", track + 1, "in normal conditions"), x = "Time", y ="Angle")
plot_p <- ggplot(data = track_data_p, aes(x = time))
if (!all(is.na(track_data_p[, "Angle L1.Y"]))) {
plot_p <- plot_p + geom_line(aes(y = track_data_p[, "Angle L1.Y"], color = "Angle L1.Y"), size = 1)
}
if (!all(is.na(track_data_p[, "Angle L2.Y"]))) {
plot_p <- plot_p + geom_line(aes(y = track_data_p[, "Angle L2.Y"], color = "Angle L2.Y"), size = 1)
}
if (!all(is.na(track_data_p[, "Angle L3.Y"]))) {
plot_p <- plot_p + geom_line(aes(y = track_data_p[, "Angle L3.Y"], color = "Angle L3.Y"), size = 1)
}
if (!all(is.na(track_data_p[, "Angle IN3.Y"]))) {
plot_p <- plot_p + geom_line(aes(y = track_data_p[, "Angle IN3.Y"], color = "Angle IN3.Y"), size = 1)
}
plot_p <- plot_p +
scale_color_manual(name = "Angle", values = c("#e78847","#05a894", "#dda0dd", "#2a52be")) +
labs(title = paste("Angle against time in tobacco ", track + 1, "in changed conditions"), x = "Time", y = "Angle")
grid <- plot_t + plot_p + plot_layout(ncol = 1, heights = c(1, 1)) +
plot_annotation(title = paste("Difference in angles between normal and changed conditions in tobacco ",track+1))
print(grid)
#audpc
for (i in 1:4) {
audpc_result_t <- ifelse(all(is.na(track_data_t[, i])), NA, audpc(track_data_t[, i], track_data_t$time, type = "absolute"))
audpc_result_p <- ifelse(all(is.na(track_data_p[, i])), NA, audpc(track_data_p[, i], track_data_p$time, type = "absolute"))
track_t[i+1] <- audpc_result_t
track_p[i+1] <- audpc_result_p
}
result_audpc_temoin <- rbind(result_audpc_temoin, track_t)
result_audpc_perturb <- rbind(result_audpc_perturb, track_p)
}
# Convert time to seconds
track_datatime_seconds_t <- track_data_t %>%
mutate(time_seconds = as.numeric(difftime(time, min(time), units = "secs")))
track_data_t$time
# Plot the data with points joined by lines
plot <- ggplot(track_data_t, aes(x = time_seconds, y = track_data_t$`Angle L1.Y`)) +
geom_line(color = "black") +
geom_point(size = 2) +
labs(x = "Time (seconds)", y = "Your Y-axis label") +
ggtitle("Your Plot Title")
print(plot)
plot
ggplot(track_data_t, aes(x = time_seconds, y = track_data_t$`Angle L1.Y`)) +
geom_line(color = "black") +
geom_point(size = 2) +
labs(x = "Time (seconds)", y = "Your Y-axis label") +
ggtitle("Your Plot Title")
track_datatime_seconds_t
# Convert time to seconds
track_data$time_seconds_t <- track_data_t %>%
mutate(time_seconds = as.numeric(difftime(time, min(time), units = "secs")))
View(track_data_t)
# Convert time to seconds
track_data_t <- transform(track_data_t, time_seconds = as.numeric(difftime(time, min(time), units = "secs")))
plot <- ggplot(track_data_t, aes(x = time_seconds, y = track_data_t$`Angle L1.Y`)) +
geom_line(color = "black") +
geom_point(size = 2) +
labs(x = "Time (seconds)", y = "Your Y-axis label") +
ggtitle("Your Plot Title")
print(plot)
# Plot the data with points joined by lines
plot <- ggplot(track_data_t, aes(x = time_seconds, y = track_data_t$`Angle L1.Y`)) +
geom_point(size = 2) +
labs(x = "Time (seconds)", y = "Your Y-axis label") +
ggtitle("Your Plot Title")
print(plot)
plot <- ggplot(track_data_t, aes(x = time_seconds, y = track_data_t$`Angle L1.Y`)) +
labs(x = "Time (seconds)", y = "Your Y-axis label") +
ggtitle("Your Plot Title")
print(plot)
View(track_data_t)
plot <- ggplot(track_data_t, aes(x = time_seconds, y = `Angle L1.Y`)) +
labs(x = "Time (seconds)", y = "Your Y-axis label") +
ggtitle("Your Plot Title")
print(plot)
ggplot(track_data_t, aes(x = time_seconds, y = track_data_t$`Angle L1.Y`)) +
labs(x = "Time (seconds)", y = "Your Y-axis label") +
ggtitle("Your Plot Title")
# Plot the data with points joined by lines
ggplot(track_data_t, aes(x = time_seconds, y = track_data_t$`Angle L1.Y`), size =1) +
labs(x = "Time (seconds)", y = "Your Y-axis label") +
ggtitle("Your Plot Title")
# Plot the data with points joined by lines
plot(track_data_t$time_seconds, track_data_t$`Angle L1.Y`)
# Plot the data with points joined by lines
plot(track_data_t$`Angle L1.Y`, track_data_t$time_seconds)
# Plot the data with points joined by lines
plot(track_data_t$time_seconds, track_data_t$`Angle L1.Y`)
# Plot the data with points joined by lines
plot(track_data_t$time_seconds, as.numeric(track_data_t$`Angle L1.Y`)
#plot
plot_t <- ggplot(data = track_data_t, aes(x = time))
# Plot the data with points joined by lines
plot(track_data_t$time_seconds, as.numeric(track_data_t$`Angle L1.Y`))
# Plot the data with points joined by lines
plot(track_data_t$time_seconds, track_data_t[1])
# Plot the data with points joined by lines
plot(track_data_t[6], track_data_t[1])
# Plot the data with points joined by lines
plot(track_data_t[[6]], track_data_t[[1]])
# Plot the data with points joined by lines
plot(track_data_t[[6]], track_data_t, type = l)
# Plot the data with points joined by lines
plot(track_data_t[[6]], track_data_t[[1]], type = l)
# Plot the data with points joined by lines
plot(track_data_t[[6]], track_data_t[[1]], type = "l")
track = 1
#creating a table of data with only one track at a time
low = 4*track + 1
high = low + 3
column_indices <- c(low:high, 13)  #Change here once we have the data
cname <- c("Angle L1.Y", "Angle L2.Y", "Angle L3.Y","Angle IN3.Y", "time")
track_data_t <- data_temoin[, column_indices, drop = FALSE]
colnames(track_data_t) <-  cname
track_data_p <- data_perturb[, column_indices, drop = FALSE]
colnames(track_data_p) <-  cname
#transforming time in a different class so it's possible to plot
track_data_t$time <- as.POSIXct(track_data_t$time, format = "%Y-%m-%d %H:%M:%S")
track_data_p$time <- as.POSIXct(track_data_p$time, format = "%Y-%m-%d %H:%M:%S")
#initializing the list "track" that will be added as a row later on in the result_aupdc_temoin
track_t <- list(track = paste0("track_",track), "Angle.L1.Y" = 0, "Angle.L2.Y" = 0, "Angle.L3.Y" = 0, "Angle.IN3.Y" = 0)
track_p <- list(track = paste0("track_",track), "Angle.L1.Y" = 0, "Angle.L2.Y" = 0, "Angle.L3.Y" = 0, "Angle.IN3.Y" = 0)
# Convert time to seconds
track_data_t <- transform(track_data_t, time_seconds = as.numeric(difftime(time, min(time), units = "secs")))
# Plot the data with points joined by lines
plot(track_data_t[[6]], track_data_t[[1]], type = "l")
